function [] = writeAmiraSurface(Vertices,Triangles,outputfilename, ...
                                    colorExterior,colorInterior)
% writeAmiraSurface(Vertices,Triangles,outputfilename)
% writes Amira Surface File (.surf) based on vertices 3D coordinates and
% triangles
% Input:
% - Vertices: [3 x NumVertices] 3D coordinates of Vertices
% - Triangles: [3 x NumTriangles] ID of Vertices that form triangle
% - outputfilename: path/to/outputfile
% - colorExterior: [1 x 3] RGB color values for exterior color
% - colorInterior: [1 x 3] RGB color values for interior color
% 
% Author: Daniel Udvary (Max Planck Institute for Neurobiology of Behavior â€“ caesar)
    if ~(strcmp(outputfilename(end-4:end), '.surf'))
        outputfilename = [outputfilename '.surf'];
    end
    
    fid = fopen(outputfilename,'w');
    
    if fid==-1
       error('Cannot write to %s',outputfilename); 
    end
    
    if nargin<4
       colorExterior = [1 1 1]; 
    end
    if nargin<5
       colorInterior = [0 0 0]; 
    end
    
    % Deletes redundant surface triangles / Cleans surfaces
    [v,~,ic] = unique(Vertices','rows');
    Vertices = v'; 
    Triangles = ic(Triangles);
    
    numVertices = size(Vertices,2); 
    numTriangles = size(Triangles,2);
    
    % Write Header
    fprintf(fid,['# HyperSurface 0.1 ASCII\n\n' ...
        'Parameters {\n' ...
        '    Materials {\n' ...
        '        Exterior {\n' ...
        '            id 0,\n' ...
        '            Color %.2f %.2f %.2f\n' ...
        '        }\n' ...
        '         {\n' ...
        '            id 1,\n' ...
        '            Color %.2f %.2f %.2f\n' ...
        '        }\n' ...
        '    }\n' ...
        '    BoundaryIds {\n' ...
        '        name "BoundaryConditions"\n' ...
        '    }\n' ...
        '}\n\n' ...
        'Vertices %d\n'],colorExterior,colorInterior,numVertices);

    % Write 3D Coordinates of Vertices 
    for i = 1:numVertices
        fprintf(fid,'\t%f %f %f\n',Vertices(:,i));    
    end

    fprintf(fid,['NBranchingPoints 0\n' ...
                    'NVerticesOnCurves 0\n' ...
                    'BoundaryCurves 0\n' ...
                    'Patches 1\n' ...
                    '{\n' ...
                    'InnerRegion\n' ...
                    'OuterRegion Exterior\n' ...
                    'BoundaryID 0\n' ...
                    'BranchingPoints 0\n\n' ...
                    'Triangles %d\n'],numTriangles);
    
    % Write Vertices IDs of Triangles
    for i = 1:numTriangles
        fprintf(fid,'  %d %d %d\n',Triangles(:,i));    
    end        
    fprintf(fid,'}\n'); 
    fclose(fid);
end