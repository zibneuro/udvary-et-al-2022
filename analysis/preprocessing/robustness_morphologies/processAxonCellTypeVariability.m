% Analysis Variability of Axons
% Requires: AxonLenData.mat (generated by extractCellTypeVariability.m)
% Output: Axon_Combination.mat
% 
% Author: Daniel Udvary (Max Planck Institute for Neurobiology of Behavior â€“ caesar)
clear all
close all
clc

%% 
matlabPath = 'D:\udvary-et-al-2022\analysis\';
inputPath = [matlabPath 'preprocessing\data\robustness_morphologies\'];
outputPath = [matlabPath 'data\robustness_morphologies\'];
load([inputPath 'AxonLenData.mat']); 
numCombThreshold = 500; 
rng(1);

%%     
numCellTypes = length(CellTypes);
%poolobj = parpool(6); 
%parfor ct = 1:numCellTypes
for ct = 1:numCellTypes
    
    matrix = lenMatrix{ct}; % Samples x BBx x BBy x BBy
    
    % Find valid voxels
    tmp = squeeze(sum(matrix,1));
    idxValid = (tmp>0); 
    numVoxels = sum(idxValid(:)); 
    
    LOOResults(ct).AxonLengthMean = cell(1,numSamples(ct));
    LOOResults(ct).AxonLengthSD = cell(1,numSamples(ct));
    LOOResults(ct).idxValid = idxValid;
    
    for currNumSamples = 1:numSamples(ct)        
        combs = nchoosek(1:numSamples(ct),currNumSamples);
        numCombs = size(combs,1); 
        
        fprintf('%s: %d / %d (#Combs = %d)\n', ...
            CellTypes{ct},currNumSamples,numSamples(ct),numCombs);
        
        % If more than 500 combiniations, randomly pick 500
        % do not iterate over all
        if numCombs > numCombThreshold
           listCombs = randperm(numCombs,numCombThreshold); 
           numCombs = numCombThreshold;
        else
           listCombs = 1:numCombs; 
        end
        
        AxonLengthMean_tmp = zeros(numVoxels,numCombs);
        AxonLengthSD_tmp = zeros(numVoxels,numCombs);

        for t = listCombs           
            m_tmp = matrix(combs(t,:),:,:,:);
            m_tmp2 = mean(m_tmp,1);
            sd_tmp2 = std(m_tmp,0,1);
            
            if size(sd_tmp2,1)~=1
                error('Size of SD wrong');
            end
            
            if size(m_tmp2,1)~=1
                error('Size of Mean wrong');
            end
            
            m_tmp2 = squeeze(m_tmp2);
            sd_tmp2 = squeeze(sd_tmp2);
            
            AxonLengthMean_tmp(:,t==listCombs) = m_tmp2(idxValid); 
            AxonLengthSD_tmp(:,t==listCombs) = sd_tmp2(idxValid); 
        end
        
        LOOResults(ct).AxonLengthMean{currNumSamples} = AxonLengthMean_tmp;
        LOOResults(ct).AxonLengthSD{currNumSamples} = AxonLengthSD_tmp;
    end
end

%%
save([outputPath 'Axon_Combination'], ...
         'LOOResults','CellTypes','numSamples','numCombThreshold','-v7.3'); 
     
% Shut down parrel loop if exist
if exist('poolobj','var')>0
    delete(poolobj);
end